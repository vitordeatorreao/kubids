// Code generated by MockGen. DO NOT EDIT.
// Source: random.go

// Package mock_kubid is a generated GoMock package.
package mock_kubid

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCollisionCounter is a mock of CollisionCounter interface.
type MockCollisionCounter struct {
	ctrl     *gomock.Controller
	recorder *MockCollisionCounterMockRecorder
}

// MockCollisionCounterMockRecorder is the mock recorder for MockCollisionCounter.
type MockCollisionCounterMockRecorder struct {
	mock *MockCollisionCounter
}

// NewMockCollisionCounter creates a new mock instance.
func NewMockCollisionCounter(ctrl *gomock.Controller) *MockCollisionCounter {
	mock := &MockCollisionCounter{ctrl: ctrl}
	mock.recorder = &MockCollisionCounterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCollisionCounter) EXPECT() *MockCollisionCounterMockRecorder {
	return m.recorder
}

// GetCollisionCount mocks base method.
func (m *MockCollisionCounter) GetCollisionCount(key string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCollisionCount", key)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCollisionCount indicates an expected call of GetCollisionCount.
func (mr *MockCollisionCounterMockRecorder) GetCollisionCount(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCollisionCount", reflect.TypeOf((*MockCollisionCounter)(nil).GetCollisionCount), key)
}
